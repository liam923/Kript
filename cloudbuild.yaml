steps:
  # Create a copy of the repo, so that steps can get their own fresh copy if
  # necessary.
  - name: ubuntu
    id: 'sandbox'
    volumes:
    - name: 'sandbox'
      path: '/sandbox'
    args: ['bash', '-c', 'mkdir -p "/sandbox" && cp -r . "/sandbox/repo"']

  # Tests

  - name: gcr.io/cloud-builders/gcloud
    id: 'secrets'
    entrypoint: 'bash'
    args: ['server/scripts/get_secrets']
    waitFor: ['sandbox']

  - name: golang:1.14
    id: 'server.validate'
    volumes:
    - name: 'sandbox'
      path: '/sandbox'
    args: ['server/scripts/validate', '/sandbox/validate', '/sandbox/repo']
    waitFor: ['sandbox']

  - name: golang:1.14
    id: 'server.lint'
    volumes:
    - name: 'sandbox'
      path: '/sandbox'
    args: ['server/scripts/lint', '/sandbox/lint', '/sandbox/repo']
    waitFor: ['sandbox']

  - name: golang:1.14
    id: 'server.test'
    args: ['make', 'test']
    dir: 'server'
    waitFor: ['sandbox']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.build.gateway'
    args: ['build', '-f', 'Dockerfile.gateway', '-t', 'gcr.io/${PROJECT_ID}/kript-gateway:${SHORT_SHA}', '.']
    dir: 'server'
    waitFor: ['sandbox', 'secrets']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.build.grpc'
    args: ['build', '-f', 'Dockerfile.grpc', '-t', 'gcr.io/${PROJECT_ID}/kript-grpc:${SHORT_SHA}', '.']
    dir: 'server'
    waitFor: ['sandbox', 'secrets']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.build.account'
    args: ['build', '-f', 'Dockerfile.account', '-t', 'gcr.io/${PROJECT_ID}/kript-account:${SHORT_SHA}', '.']
    dir: 'server'
    waitFor: ['sandbox', 'secrets']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.build.data'
    args: ['build', '-f', 'Dockerfile.data', '-t', 'gcr.io/${PROJECT_ID}/kript-data:${SHORT_SHA}', '.']
    dir: 'server'
    waitFor: ['sandbox', 'secrets']

  - name: node
    id: 'client.web.install'
    entrypoint: npm
    args: ['install']
    dir: 'client/web'
    waitFor: ['sandbox']

  - name: node
    id: 'client.web.test'
    entrypoint: npm
    args: ['test', '--', '--watchAll=false']
    dir: 'client/web'
    waitFor: ['sandbox', 'client.web.install']

  # Deployments

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.push.gateway'
    args: ['push', 'gcr.io/${PROJECT_ID}/kript-gateway:${SHORT_SHA}']
    dir: 'server'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.push.grpc'
    args: ['push', 'gcr.io/${PROJECT_ID}/kript-grpc:${SHORT_SHA}']
    dir: 'server'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.push.account'
    args: ['push', 'gcr.io/${PROJECT_ID}/kript-account:${SHORT_SHA}']
    dir: 'server'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'server.push.data'
    args: ['push', 'gcr.io/${PROJECT_ID}/kript-data:${SHORT_SHA}']
    dir: 'server'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'server.deploy'
    entrypoint: 'bash'
    args: ['server/scripts/deploy']
    env:
    - 'BRANCH=$BRANCH_NAME'
    - 'PROJECT_ID=$PROJECT_ID'
    - 'SHORT_SHA=$SHORT_SHA'
timeout: 1200s
images:
  - 'gcr.io/${PROJECT_ID}/kript-gateway:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/kript-grpc:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/kript-account:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/kript-data:${SHORT_SHA}'
