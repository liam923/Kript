// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kript/api/account.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// An enumeration of type of two-factor authentication.
type TwoFactor_TwoFactorType int32

const (
	// A code via text message.
	TwoFactor_PHONE_TEXT TwoFactor_TwoFactorType = 0
	// A code via phone call.
	TwoFactor_PHONE_CALL TwoFactor_TwoFactorType = 1
	// A code via email.
	TwoFactor_EMAIL TwoFactor_TwoFactorType = 2
)

var TwoFactor_TwoFactorType_name = map[int32]string{
	0: "PHONE_TEXT",
	1: "PHONE_CALL",
	2: "EMAIL",
}

var TwoFactor_TwoFactorType_value = map[string]int32{
	"PHONE_TEXT": 0,
	"PHONE_CALL": 1,
	"EMAIL":      2,
}

func (x TwoFactor_TwoFactorType) String() string {
	return proto.EnumName(TwoFactor_TwoFactorType_name, int32(x))
}

func (TwoFactor_TwoFactorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{6, 0}
}

// The public information about a user that is visible to anyone.
type PublicUser struct {
	// The id of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The username of the user.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The user's public key.
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The salt used to hash the user's password.
	Salt string `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`
	// The hashing algorithm used to hash the user's password.
	PasswordHashAlgorithm HashAlgorithm `protobuf:"varint,5,opt,name=password_hash_algorithm,json=passwordHashAlgorithm,proto3,enum=kript.api.HashAlgorithm" json:"password_hash_algorithm,omitempty"`
	// The encryption algorithm used to encrypt the user's data keys.
	DataEncryptionAlgorithm AEncryptionAlgorithm `protobuf:"varint,6,opt,name=data_encryption_algorithm,json=dataEncryptionAlgorithm,proto3,enum=kript.api.AEncryptionAlgorithm" json:"data_encryption_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *PublicUser) Reset()         { *m = PublicUser{} }
func (m *PublicUser) String() string { return proto.CompactTextString(m) }
func (*PublicUser) ProtoMessage()    {}
func (*PublicUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{0}
}
func (m *PublicUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicUser.Unmarshal(m, b)
}
func (m *PublicUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicUser.Marshal(b, m, deterministic)
}
func (m *PublicUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicUser.Merge(m, src)
}
func (m *PublicUser) XXX_Size() int {
	return xxx_messageInfo_PublicUser.Size(m)
}
func (m *PublicUser) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicUser.DiscardUnknown(m)
}

var xxx_messageInfo_PublicUser proto.InternalMessageInfo

func (m *PublicUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PublicUser) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *PublicUser) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *PublicUser) GetPasswordHashAlgorithm() HashAlgorithm {
	if m != nil {
		return m.PasswordHashAlgorithm
	}
	return HashAlgorithm_UNKNOWN_HASH_ALGORITHM
}

func (m *PublicUser) GetDataEncryptionAlgorithm() AEncryptionAlgorithm {
	if m != nil {
		return m.DataEncryptionAlgorithm
	}
	return AEncryptionAlgorithm_UNKNOWN_A_ENCRYPTION_ALGORITHM
}

// Private information about a user that is only visible to the user.
type PrivateUser struct {
	// The user's private key, encrypted with the user's password.
	PrivateKey string `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The encryption algorithm used to encrypt the private key.
	PrivateKeyEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,2,opt,name=private_key_encryption_algorithm,json=privateKeyEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"private_key_encryption_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}             `json:"-"`
	XXX_unrecognized              []byte               `json:"-"`
	XXX_sizecache                 int32                `json:"-"`
}

func (m *PrivateUser) Reset()         { *m = PrivateUser{} }
func (m *PrivateUser) String() string { return proto.CompactTextString(m) }
func (*PrivateUser) ProtoMessage()    {}
func (*PrivateUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{1}
}
func (m *PrivateUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateUser.Unmarshal(m, b)
}
func (m *PrivateUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateUser.Marshal(b, m, deterministic)
}
func (m *PrivateUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateUser.Merge(m, src)
}
func (m *PrivateUser) XXX_Size() int {
	return xxx_messageInfo_PrivateUser.Size(m)
}
func (m *PrivateUser) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateUser.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateUser proto.InternalMessageInfo

func (m *PrivateUser) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *PrivateUser) GetPrivateKeyEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.PrivateKeyEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

// The public and private information about a user.
type User struct {
	// The user's public information.
	Public *PublicUser `protobuf:"bytes,1,opt,name=public,proto3" json:"public,omitempty"`
	// The user's private information.
	Private              *PrivateUser `protobuf:"bytes,2,opt,name=private,proto3" json:"private,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetPublic() *PublicUser {
	if m != nil {
		return m.Public
	}
	return nil
}

func (m *User) GetPrivate() *PrivateUser {
	if m != nil {
		return m.Private
	}
	return nil
}

type VerificationToken struct {
	Jwt                  *JWT     `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerificationToken) Reset()         { *m = VerificationToken{} }
func (m *VerificationToken) String() string { return proto.CompactTextString(m) }
func (*VerificationToken) ProtoMessage()    {}
func (*VerificationToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{3}
}
func (m *VerificationToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerificationToken.Unmarshal(m, b)
}
func (m *VerificationToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerificationToken.Marshal(b, m, deterministic)
}
func (m *VerificationToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerificationToken.Merge(m, src)
}
func (m *VerificationToken) XXX_Size() int {
	return xxx_messageInfo_VerificationToken.Size(m)
}
func (m *VerificationToken) XXX_DiscardUnknown() {
	xxx_messageInfo_VerificationToken.DiscardUnknown(m)
}

var xxx_messageInfo_VerificationToken proto.InternalMessageInfo

func (m *VerificationToken) GetJwt() *JWT {
	if m != nil {
		return m.Jwt
	}
	return nil
}

type RefreshToken struct {
	Jwt                  *JWT     `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshToken) Reset()         { *m = RefreshToken{} }
func (m *RefreshToken) String() string { return proto.CompactTextString(m) }
func (*RefreshToken) ProtoMessage()    {}
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{4}
}
func (m *RefreshToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshToken.Unmarshal(m, b)
}
func (m *RefreshToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshToken.Marshal(b, m, deterministic)
}
func (m *RefreshToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshToken.Merge(m, src)
}
func (m *RefreshToken) XXX_Size() int {
	return xxx_messageInfo_RefreshToken.Size(m)
}
func (m *RefreshToken) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshToken.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshToken proto.InternalMessageInfo

func (m *RefreshToken) GetJwt() *JWT {
	if m != nil {
		return m.Jwt
	}
	return nil
}

type SuccessfulLoginMessage struct {
	// The refresh token to identify and authenticate the user.
	RefreshToken *RefreshToken `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The user's information.
	User                 *User    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessfulLoginMessage) Reset()         { *m = SuccessfulLoginMessage{} }
func (m *SuccessfulLoginMessage) String() string { return proto.CompactTextString(m) }
func (*SuccessfulLoginMessage) ProtoMessage()    {}
func (*SuccessfulLoginMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{5}
}
func (m *SuccessfulLoginMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessfulLoginMessage.Unmarshal(m, b)
}
func (m *SuccessfulLoginMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessfulLoginMessage.Marshal(b, m, deterministic)
}
func (m *SuccessfulLoginMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessfulLoginMessage.Merge(m, src)
}
func (m *SuccessfulLoginMessage) XXX_Size() int {
	return xxx_messageInfo_SuccessfulLoginMessage.Size(m)
}
func (m *SuccessfulLoginMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessfulLoginMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessfulLoginMessage proto.InternalMessageInfo

func (m *SuccessfulLoginMessage) GetRefreshToken() *RefreshToken {
	if m != nil {
		return m.RefreshToken
	}
	return nil
}

func (m *SuccessfulLoginMessage) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *SuccessfulLoginMessage) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// A way to send/receive a two-factor authentication code.
type TwoFactor struct {
	// The identifier of this two-factor authentication method.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The type of two-factor authentication.
	Type TwoFactor_TwoFactorType `protobuf:"varint,2,opt,name=type,proto3,enum=kript.api.TwoFactor_TwoFactorType" json:"type,omitempty"`
	// Where the two-factor authentication code is sent (phone, email, etc.).
	Destination          string   `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwoFactor) Reset()         { *m = TwoFactor{} }
func (m *TwoFactor) String() string { return proto.CompactTextString(m) }
func (*TwoFactor) ProtoMessage()    {}
func (*TwoFactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{6}
}
func (m *TwoFactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwoFactor.Unmarshal(m, b)
}
func (m *TwoFactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwoFactor.Marshal(b, m, deterministic)
}
func (m *TwoFactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwoFactor.Merge(m, src)
}
func (m *TwoFactor) XXX_Size() int {
	return xxx_messageInfo_TwoFactor.Size(m)
}
func (m *TwoFactor) XXX_DiscardUnknown() {
	xxx_messageInfo_TwoFactor.DiscardUnknown(m)
}

var xxx_messageInfo_TwoFactor proto.InternalMessageInfo

func (m *TwoFactor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TwoFactor) GetType() TwoFactor_TwoFactorType {
	if m != nil {
		return m.Type
	}
	return TwoFactor_PHONE_TEXT
}

func (m *TwoFactor) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type LoginUserRequest struct {
	// An identifier for the user.
	//
	// Types that are valid to be assigned to UserIdentifier:
	//	*LoginUserRequest_Username
	//	*LoginUserRequest_UserId
	UserIdentifier isLoginUserRequest_UserIdentifier `protobuf_oneof:"user_identifier"`
	// The hashed password of the user.
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginUserRequest) Reset()         { *m = LoginUserRequest{} }
func (m *LoginUserRequest) String() string { return proto.CompactTextString(m) }
func (*LoginUserRequest) ProtoMessage()    {}
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{7}
}
func (m *LoginUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserRequest.Unmarshal(m, b)
}
func (m *LoginUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserRequest.Marshal(b, m, deterministic)
}
func (m *LoginUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserRequest.Merge(m, src)
}
func (m *LoginUserRequest) XXX_Size() int {
	return xxx_messageInfo_LoginUserRequest.Size(m)
}
func (m *LoginUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserRequest proto.InternalMessageInfo

type isLoginUserRequest_UserIdentifier interface {
	isLoginUserRequest_UserIdentifier()
}

type LoginUserRequest_Username struct {
	Username string `protobuf:"bytes,1,opt,name=username,proto3,oneof" json:"username,omitempty"`
}
type LoginUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (*LoginUserRequest_Username) isLoginUserRequest_UserIdentifier() {}
func (*LoginUserRequest_UserId) isLoginUserRequest_UserIdentifier()   {}

func (m *LoginUserRequest) GetUserIdentifier() isLoginUserRequest_UserIdentifier {
	if m != nil {
		return m.UserIdentifier
	}
	return nil
}

func (m *LoginUserRequest) GetUsername() string {
	if x, ok := m.GetUserIdentifier().(*LoginUserRequest_Username); ok {
		return x.Username
	}
	return ""
}

func (m *LoginUserRequest) GetUserId() string {
	if x, ok := m.GetUserIdentifier().(*LoginUserRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (m *LoginUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LoginUserRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LoginUserRequest_Username)(nil),
		(*LoginUserRequest_UserId)(nil),
	}
}

type LoginUserResponse struct {
	// A response, with the type dependent on whether two-factor authentication
	// is enabled.
	//
	// Types that are valid to be assigned to ResponseType:
	//	*LoginUserResponse_TwoFactor
	//	*LoginUserResponse_Response
	ResponseType         isLoginUserResponse_ResponseType `protobuf_oneof:"response_type"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *LoginUserResponse) Reset()         { *m = LoginUserResponse{} }
func (m *LoginUserResponse) String() string { return proto.CompactTextString(m) }
func (*LoginUserResponse) ProtoMessage()    {}
func (*LoginUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{8}
}
func (m *LoginUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserResponse.Unmarshal(m, b)
}
func (m *LoginUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserResponse.Marshal(b, m, deterministic)
}
func (m *LoginUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserResponse.Merge(m, src)
}
func (m *LoginUserResponse) XXX_Size() int {
	return xxx_messageInfo_LoginUserResponse.Size(m)
}
func (m *LoginUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserResponse proto.InternalMessageInfo

type isLoginUserResponse_ResponseType interface {
	isLoginUserResponse_ResponseType()
}

type LoginUserResponse_TwoFactor struct {
	TwoFactor *LoginUserResponse_TwoFactorInfo `protobuf:"bytes,1,opt,name=two_factor,json=twoFactor,proto3,oneof" json:"two_factor,omitempty"`
}
type LoginUserResponse_Response struct {
	Response *SuccessfulLoginMessage `protobuf:"bytes,2,opt,name=response,proto3,oneof" json:"response,omitempty"`
}

func (*LoginUserResponse_TwoFactor) isLoginUserResponse_ResponseType() {}
func (*LoginUserResponse_Response) isLoginUserResponse_ResponseType()  {}

func (m *LoginUserResponse) GetResponseType() isLoginUserResponse_ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return nil
}

func (m *LoginUserResponse) GetTwoFactor() *LoginUserResponse_TwoFactorInfo {
	if x, ok := m.GetResponseType().(*LoginUserResponse_TwoFactor); ok {
		return x.TwoFactor
	}
	return nil
}

func (m *LoginUserResponse) GetResponse() *SuccessfulLoginMessage {
	if x, ok := m.GetResponseType().(*LoginUserResponse_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LoginUserResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LoginUserResponse_TwoFactor)(nil),
		(*LoginUserResponse_Response)(nil),
	}
}

// Represents the relevant information for the two-factor authentication
// process to continue.
type LoginUserResponse_TwoFactorInfo struct {
	// The token used to identify the user through the verification process.
	VerificationToken *VerificationToken `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	// The options available for two-factor authentication.
	Options              []*TwoFactor `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LoginUserResponse_TwoFactorInfo) Reset()         { *m = LoginUserResponse_TwoFactorInfo{} }
func (m *LoginUserResponse_TwoFactorInfo) String() string { return proto.CompactTextString(m) }
func (*LoginUserResponse_TwoFactorInfo) ProtoMessage()    {}
func (*LoginUserResponse_TwoFactorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{8, 0}
}
func (m *LoginUserResponse_TwoFactorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginUserResponse_TwoFactorInfo.Unmarshal(m, b)
}
func (m *LoginUserResponse_TwoFactorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginUserResponse_TwoFactorInfo.Marshal(b, m, deterministic)
}
func (m *LoginUserResponse_TwoFactorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginUserResponse_TwoFactorInfo.Merge(m, src)
}
func (m *LoginUserResponse_TwoFactorInfo) XXX_Size() int {
	return xxx_messageInfo_LoginUserResponse_TwoFactorInfo.Size(m)
}
func (m *LoginUserResponse_TwoFactorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginUserResponse_TwoFactorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoginUserResponse_TwoFactorInfo proto.InternalMessageInfo

func (m *LoginUserResponse_TwoFactorInfo) GetVerificationToken() *VerificationToken {
	if m != nil {
		return m.VerificationToken
	}
	return nil
}

func (m *LoginUserResponse_TwoFactorInfo) GetOptions() []*TwoFactor {
	if m != nil {
		return m.Options
	}
	return nil
}

type SendVerificationRequest struct {
	// The token used to identify the user through the verification process.
	VerificationToken *VerificationToken `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	// The two-factor authentication option used.
	Option               *TwoFactor `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SendVerificationRequest) Reset()         { *m = SendVerificationRequest{} }
func (m *SendVerificationRequest) String() string { return proto.CompactTextString(m) }
func (*SendVerificationRequest) ProtoMessage()    {}
func (*SendVerificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{9}
}
func (m *SendVerificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendVerificationRequest.Unmarshal(m, b)
}
func (m *SendVerificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendVerificationRequest.Marshal(b, m, deterministic)
}
func (m *SendVerificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendVerificationRequest.Merge(m, src)
}
func (m *SendVerificationRequest) XXX_Size() int {
	return xxx_messageInfo_SendVerificationRequest.Size(m)
}
func (m *SendVerificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendVerificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendVerificationRequest proto.InternalMessageInfo

func (m *SendVerificationRequest) GetVerificationToken() *VerificationToken {
	if m != nil {
		return m.VerificationToken
	}
	return nil
}

func (m *SendVerificationRequest) GetOption() *TwoFactor {
	if m != nil {
		return m.Option
	}
	return nil
}

type SendVerificationResponse struct {
	// Whether or not sending the verification code was successful.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// The two-factor authentication option used.
	Destination          *TwoFactor `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SendVerificationResponse) Reset()         { *m = SendVerificationResponse{} }
func (m *SendVerificationResponse) String() string { return proto.CompactTextString(m) }
func (*SendVerificationResponse) ProtoMessage()    {}
func (*SendVerificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{10}
}
func (m *SendVerificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendVerificationResponse.Unmarshal(m, b)
}
func (m *SendVerificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendVerificationResponse.Marshal(b, m, deterministic)
}
func (m *SendVerificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendVerificationResponse.Merge(m, src)
}
func (m *SendVerificationResponse) XXX_Size() int {
	return xxx_messageInfo_SendVerificationResponse.Size(m)
}
func (m *SendVerificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendVerificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendVerificationResponse proto.InternalMessageInfo

func (m *SendVerificationResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendVerificationResponse) GetDestination() *TwoFactor {
	if m != nil {
		return m.Destination
	}
	return nil
}

type VerifyUserRequest struct {
	// The token used to identify the user through the verification process.
	VerificationToken *VerificationToken `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	// The two-factor authentication option used.
	Destination *TwoFactor `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	// The two-factor authentication code received on the specified destination.
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyUserRequest) Reset()         { *m = VerifyUserRequest{} }
func (m *VerifyUserRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyUserRequest) ProtoMessage()    {}
func (*VerifyUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{11}
}
func (m *VerifyUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyUserRequest.Unmarshal(m, b)
}
func (m *VerifyUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyUserRequest.Marshal(b, m, deterministic)
}
func (m *VerifyUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyUserRequest.Merge(m, src)
}
func (m *VerifyUserRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyUserRequest.Size(m)
}
func (m *VerifyUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyUserRequest proto.InternalMessageInfo

func (m *VerifyUserRequest) GetVerificationToken() *VerificationToken {
	if m != nil {
		return m.VerificationToken
	}
	return nil
}

func (m *VerifyUserRequest) GetDestination() *TwoFactor {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *VerifyUserRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type VerifyUserResponse struct {
	// The user's authentication and information.
	Response             *SuccessfulLoginMessage `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *VerifyUserResponse) Reset()         { *m = VerifyUserResponse{} }
func (m *VerifyUserResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyUserResponse) ProtoMessage()    {}
func (*VerifyUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{12}
}
func (m *VerifyUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyUserResponse.Unmarshal(m, b)
}
func (m *VerifyUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyUserResponse.Marshal(b, m, deterministic)
}
func (m *VerifyUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyUserResponse.Merge(m, src)
}
func (m *VerifyUserResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyUserResponse.Size(m)
}
func (m *VerifyUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyUserResponse proto.InternalMessageInfo

func (m *VerifyUserResponse) GetResponse() *SuccessfulLoginMessage {
	if m != nil {
		return m.Response
	}
	return nil
}

type UpdatePasswordRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The old hashed password of the user.
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	// The new hashed password of the user.
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	// The salt used in the new hashed password.
	NewSalt string `protobuf:"bytes,4,opt,name=new_salt,json=newSalt,proto3" json:"new_salt,omitempty"`
	// The hashing algorithm used to hash the user's new password.
	NewPasswordHashAlgorithm HashAlgorithm `protobuf:"varint,5,opt,name=new_password_hash_algorithm,json=newPasswordHashAlgorithm,proto3,enum=kript.api.HashAlgorithm" json:"new_password_hash_algorithm,omitempty"`
	// The user's private key, re-encrypted with the user's new password.
	PrivateKey string `protobuf:"bytes,6,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The encryption algorithm used to encrypt the user's private key.
	PrivateKeyEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,7,opt,name=private_key_encryption_algorithm,json=privateKeyEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"private_key_encryption_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}             `json:"-"`
	XXX_unrecognized              []byte               `json:"-"`
	XXX_sizecache                 int32                `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{13}
}
func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(m, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *UpdatePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewSalt() string {
	if m != nil {
		return m.NewSalt
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewPasswordHashAlgorithm() HashAlgorithm {
	if m != nil {
		return m.NewPasswordHashAlgorithm
	}
	return HashAlgorithm_UNKNOWN_HASH_ALGORITHM
}

func (m *UpdatePasswordRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPrivateKeyEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.PrivateKeyEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

type UpdatePasswordResponse struct {
	// The user's information.
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordResponse) Reset()         { *m = UpdatePasswordResponse{} }
func (m *UpdatePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordResponse) ProtoMessage()    {}
func (*UpdatePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{14}
}
func (m *UpdatePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordResponse.Unmarshal(m, b)
}
func (m *UpdatePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordResponse.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordResponse.Merge(m, src)
}
func (m *UpdatePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordResponse.Size(m)
}
func (m *UpdatePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordResponse proto.InternalMessageInfo

func (m *UpdatePasswordResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateAccountRequest struct {
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The hashed password of the user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The salt used in the new hashed password.
	Salt string `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	// The hashing algorithm used to hash the user's password.
	PasswordHashAlgorithm HashAlgorithm `protobuf:"varint,4,opt,name=password_hash_algorithm,json=passwordHashAlgorithm,proto3,enum=kript.api.HashAlgorithm" json:"password_hash_algorithm,omitempty"`
	// The user's public key.
	PublicKey string `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The user's private key, encrypted using the user's password.
	PrivateKey string `protobuf:"bytes,6,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The encryption algorithm used to encrypt the user's data.
	DataEncryptionAlgorithm AEncryptionAlgorithm `protobuf:"varint,7,opt,name=data_encryption_algorithm,json=dataEncryptionAlgorithm,proto3,enum=kript.api.AEncryptionAlgorithm" json:"data_encryption_algorithm,omitempty"`
	// The encryption algorithm used to encrypt the user's private key.
	PrivateKeyEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,8,opt,name=private_key_encryption_algorithm,json=privateKeyEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"private_key_encryption_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}             `json:"-"`
	XXX_unrecognized              []byte               `json:"-"`
	XXX_sizecache                 int32                `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{15}
}
func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(m, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateAccountRequest) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *CreateAccountRequest) GetPasswordHashAlgorithm() HashAlgorithm {
	if m != nil {
		return m.PasswordHashAlgorithm
	}
	return HashAlgorithm_UNKNOWN_HASH_ALGORITHM
}

func (m *CreateAccountRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *CreateAccountRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *CreateAccountRequest) GetDataEncryptionAlgorithm() AEncryptionAlgorithm {
	if m != nil {
		return m.DataEncryptionAlgorithm
	}
	return AEncryptionAlgorithm_UNKNOWN_A_ENCRYPTION_ALGORITHM
}

func (m *CreateAccountRequest) GetPrivateKeyEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.PrivateKeyEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

type CreateAccountResponse struct {
	// The user's authentication and information.
	Response             *SuccessfulLoginMessage `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateAccountResponse) Reset()         { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()    {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{16}
}
func (m *CreateAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountResponse.Unmarshal(m, b)
}
func (m *CreateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountResponse.Marshal(b, m, deterministic)
}
func (m *CreateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountResponse.Merge(m, src)
}
func (m *CreateAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccountResponse.Size(m)
}
func (m *CreateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountResponse proto.InternalMessageInfo

func (m *CreateAccountResponse) GetResponse() *SuccessfulLoginMessage {
	if m != nil {
		return m.Response
	}
	return nil
}

type RefreshAuthRequest struct {
	// The refresh token to identify and authenticate the user.
	RefreshToken         *RefreshToken `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RefreshAuthRequest) Reset()         { *m = RefreshAuthRequest{} }
func (m *RefreshAuthRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshAuthRequest) ProtoMessage()    {}
func (*RefreshAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{17}
}
func (m *RefreshAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshAuthRequest.Unmarshal(m, b)
}
func (m *RefreshAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshAuthRequest.Marshal(b, m, deterministic)
}
func (m *RefreshAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshAuthRequest.Merge(m, src)
}
func (m *RefreshAuthRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshAuthRequest.Size(m)
}
func (m *RefreshAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshAuthRequest proto.InternalMessageInfo

func (m *RefreshAuthRequest) GetRefreshToken() *RefreshToken {
	if m != nil {
		return m.RefreshToken
	}
	return nil
}

type RefreshAuthResponse struct {
	// The access token to identify and authenticate the user.
	AccessToken          *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RefreshAuthResponse) Reset()         { *m = RefreshAuthResponse{} }
func (m *RefreshAuthResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshAuthResponse) ProtoMessage()    {}
func (*RefreshAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{18}
}
func (m *RefreshAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshAuthResponse.Unmarshal(m, b)
}
func (m *RefreshAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshAuthResponse.Marshal(b, m, deterministic)
}
func (m *RefreshAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshAuthResponse.Merge(m, src)
}
func (m *RefreshAuthResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshAuthResponse.Size(m)
}
func (m *RefreshAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshAuthResponse proto.InternalMessageInfo

func (m *RefreshAuthResponse) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

type GetUserRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// An identifier of the user to retrieve.
	//
	// Types that are valid to be assigned to UserIdentifier:
	//	*GetUserRequest_Username
	//	*GetUserRequest_UserId
	UserIdentifier       isGetUserRequest_UserIdentifier `protobuf_oneof:"user_identifier"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{19}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

type isGetUserRequest_UserIdentifier interface {
	isGetUserRequest_UserIdentifier()
}

type GetUserRequest_Username struct {
	Username string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
}
type GetUserRequest_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (*GetUserRequest_Username) isGetUserRequest_UserIdentifier() {}
func (*GetUserRequest_UserId) isGetUserRequest_UserIdentifier()   {}

func (m *GetUserRequest) GetUserIdentifier() isGetUserRequest_UserIdentifier {
	if m != nil {
		return m.UserIdentifier
	}
	return nil
}

func (m *GetUserRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *GetUserRequest) GetUsername() string {
	if x, ok := m.GetUserIdentifier().(*GetUserRequest_Username); ok {
		return x.Username
	}
	return ""
}

func (m *GetUserRequest) GetUserId() string {
	if x, ok := m.GetUserIdentifier().(*GetUserRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetUserRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetUserRequest_Username)(nil),
		(*GetUserRequest_UserId)(nil),
	}
}

type GetUserResponse struct {
	// The information of the specified user.
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_574df43e36ddeef5, []int{20}
}
func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (m *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(m, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterEnum("kript.api.TwoFactor_TwoFactorType", TwoFactor_TwoFactorType_name, TwoFactor_TwoFactorType_value)
	proto.RegisterType((*PublicUser)(nil), "kript.api.PublicUser")
	proto.RegisterType((*PrivateUser)(nil), "kript.api.PrivateUser")
	proto.RegisterType((*User)(nil), "kript.api.User")
	proto.RegisterType((*VerificationToken)(nil), "kript.api.VerificationToken")
	proto.RegisterType((*RefreshToken)(nil), "kript.api.RefreshToken")
	proto.RegisterType((*SuccessfulLoginMessage)(nil), "kript.api.SuccessfulLoginMessage")
	proto.RegisterType((*TwoFactor)(nil), "kript.api.TwoFactor")
	proto.RegisterType((*LoginUserRequest)(nil), "kript.api.LoginUserRequest")
	proto.RegisterType((*LoginUserResponse)(nil), "kript.api.LoginUserResponse")
	proto.RegisterType((*LoginUserResponse_TwoFactorInfo)(nil), "kript.api.LoginUserResponse.TwoFactorInfo")
	proto.RegisterType((*SendVerificationRequest)(nil), "kript.api.SendVerificationRequest")
	proto.RegisterType((*SendVerificationResponse)(nil), "kript.api.SendVerificationResponse")
	proto.RegisterType((*VerifyUserRequest)(nil), "kript.api.VerifyUserRequest")
	proto.RegisterType((*VerifyUserResponse)(nil), "kript.api.VerifyUserResponse")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "kript.api.UpdatePasswordRequest")
	proto.RegisterType((*UpdatePasswordResponse)(nil), "kript.api.UpdatePasswordResponse")
	proto.RegisterType((*CreateAccountRequest)(nil), "kript.api.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "kript.api.CreateAccountResponse")
	proto.RegisterType((*RefreshAuthRequest)(nil), "kript.api.RefreshAuthRequest")
	proto.RegisterType((*RefreshAuthResponse)(nil), "kript.api.RefreshAuthResponse")
	proto.RegisterType((*GetUserRequest)(nil), "kript.api.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "kript.api.GetUserResponse")
}

func init() { proto.RegisterFile("kript/api/account.proto", fileDescriptor_574df43e36ddeef5) }

var fileDescriptor_574df43e36ddeef5 = []byte{
	// 1366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4d, 0x53, 0xdb, 0xc6,
	0x1b, 0x47, 0x36, 0xc6, 0xf8, 0x11, 0x18, 0xd8, 0x7f, 0x00, 0xa1, 0xc0, 0x3f, 0x8e, 0x72, 0x49,
	0x33, 0xc1, 0x4a, 0x9d, 0x49, 0x66, 0x92, 0x69, 0xa6, 0xe3, 0x64, 0x68, 0x49, 0x21, 0x0d, 0x23,
	0x48, 0xd2, 0x69, 0x67, 0xea, 0x59, 0xa4, 0xb5, 0xac, 0x62, 0x24, 0x55, 0x5a, 0xe3, 0x71, 0x8e,
	0x3d, 0xf7, 0xd4, 0x76, 0x26, 0x9d, 0x7e, 0x86, 0x5e, 0x7a, 0xe9, 0xa5, 0xa7, 0x7e, 0x86, 0x7e,
	0x85, 0x7e, 0x84, 0x7e, 0x80, 0x8e, 0x56, 0x2b, 0x69, 0x65, 0x0b, 0x4a, 0x80, 0x13, 0xda, 0x7d,
	0x5e, 0x7e, 0xcf, 0x3e, 0xef, 0x18, 0x56, 0x8f, 0x02, 0xc7, 0xa7, 0x3a, 0xf6, 0x1d, 0x1d, 0x9b,
	0xa6, 0x37, 0x70, 0x69, 0xd3, 0x0f, 0x3c, 0xea, 0xa1, 0x1a, 0x23, 0x34, 0xb1, 0xef, 0xa8, 0x6b,
	0x19, 0xcf, 0xc0, 0x75, 0x4e, 0x48, 0x10, 0xe2, 0x7e, 0xcc, 0xa5, 0xae, 0xdb, 0x9e, 0x67, 0xf7,
	0x49, 0x2c, 0xef, 0xba, 0x1e, 0xc5, 0xd4, 0xf1, 0xdc, 0x90, 0x53, 0xef, 0xb2, 0x3f, 0xe6, 0xa6,
	0x4d, 0xdc, 0xcd, 0x70, 0x88, 0x6d, 0x9b, 0x04, 0xba, 0xe7, 0x33, 0x8e, 0x49, 0x6e, 0xed, 0x97,
	0x12, 0xc0, 0xde, 0xe0, 0xb0, 0xef, 0x98, 0xaf, 0x42, 0x12, 0xa0, 0x3a, 0x94, 0x1c, 0x4b, 0x91,
	0x1a, 0xd2, 0xed, 0x9a, 0x51, 0x72, 0x2c, 0xa4, 0xc2, 0xec, 0x20, 0x24, 0x81, 0x8b, 0x8f, 0x89,
	0x52, 0x62, 0xb7, 0xe9, 0x19, 0x6d, 0x00, 0xf8, 0x4c, 0xb2, 0x73, 0x44, 0x46, 0x4a, 0x99, 0x51,
	0x6b, 0xf1, 0xcd, 0x0e, 0x19, 0x21, 0x04, 0xd3, 0x21, 0xee, 0x53, 0x65, 0x9a, 0x11, 0xd8, 0x37,
	0xda, 0x83, 0x55, 0x1f, 0x87, 0xe1, 0xd0, 0x0b, 0xac, 0x4e, 0x0f, 0x87, 0xbd, 0x0e, 0xee, 0xdb,
	0x5e, 0xe0, 0xd0, 0xde, 0xb1, 0x52, 0x69, 0x48, 0xb7, 0xeb, 0x2d, 0xa5, 0x99, 0x7a, 0xa0, 0xb9,
	0x8d, 0xc3, 0x5e, 0x3b, 0xa1, 0x1b, 0xcb, 0x89, 0x60, 0xee, 0x1a, 0x7d, 0x05, 0x6b, 0x16, 0xa6,
	0xb8, 0x43, 0x5c, 0x33, 0x18, 0xb1, 0x57, 0x0a, 0x3a, 0x67, 0x98, 0xce, 0x1b, 0x82, 0xce, 0xf6,
	0x56, 0xca, 0x97, 0xa9, 0x5e, 0x8d, 0x34, 0x14, 0x10, 0xb4, 0x9f, 0x25, 0x90, 0xf7, 0x02, 0xe7,
	0x04, 0x53, 0xc2, 0xbc, 0x73, 0x03, 0x64, 0x3f, 0x3e, 0xb2, 0x27, 0xc7, 0x6e, 0x02, 0x7e, 0x15,
	0xbd, 0xb9, 0x07, 0x0d, 0x81, 0xa1, 0xd8, 0xa8, 0xd2, 0x84, 0x51, 0xfb, 0x45, 0x46, 0x6d, 0x64,
	0x6a, 0x8b, 0x4c, 0xb3, 0x61, 0x9a, 0x99, 0xb4, 0x09, 0x33, 0xb1, 0xcb, 0x99, 0x35, 0x72, 0x6b,
	0x59, 0xd0, 0x9b, 0xc5, 0xd5, 0xe0, 0x4c, 0xe8, 0x1e, 0x54, 0xb9, 0x5e, 0x66, 0x87, 0xdc, 0x5a,
	0x11, 0xf9, 0xb3, 0xa7, 0x1a, 0x09, 0x9b, 0xf6, 0x00, 0x96, 0x5e, 0x93, 0xc0, 0xe9, 0x3a, 0x26,
	0xcb, 0x9b, 0x03, 0xef, 0x88, 0xb8, 0xa8, 0x01, 0xe5, 0x6f, 0x86, 0x94, 0x43, 0xd6, 0x05, 0x15,
	0x9f, 0xbd, 0x39, 0x30, 0x22, 0x92, 0x76, 0x0f, 0xe6, 0x0c, 0xd2, 0x0d, 0x48, 0xd8, 0x3b, 0xaf,
	0xc4, 0xef, 0x12, 0xac, 0xec, 0x0f, 0x4c, 0x93, 0x84, 0x61, 0x77, 0xd0, 0xdf, 0xf5, 0x6c, 0xc7,
	0x7d, 0x41, 0xc2, 0x10, 0xdb, 0x04, 0x7d, 0x04, 0xf3, 0x41, 0xac, 0xac, 0x43, 0x23, 0x6d, 0x5c,
	0xcd, 0xaa, 0xa0, 0x46, 0x04, 0x33, 0xe6, 0x02, 0x11, 0xfa, 0x11, 0xcc, 0x61, 0xa6, 0x96, 0x0b,
	0x4f, 0x3e, 0xbc, 0xcd, 0xc8, 0xb1, 0xac, 0x8c, 0xb3, 0x03, 0xba, 0x05, 0xd3, 0x51, 0xba, 0xb3,
	0xe4, 0x96, 0x5b, 0x0b, 0x82, 0x08, 0x73, 0x12, 0x23, 0x6a, 0xbf, 0x49, 0x50, 0x3b, 0x18, 0x7a,
	0x9f, 0x60, 0x93, 0x7a, 0x93, 0x15, 0xf4, 0x10, 0xa6, 0xe9, 0xc8, 0x27, 0x3c, 0xec, 0x9a, 0xa0,
	0x22, 0x95, 0xc9, 0xbe, 0x0e, 0x46, 0x3e, 0x31, 0x18, 0x3f, 0x6a, 0x80, 0x6c, 0x91, 0x90, 0x3a,
	0x2e, 0x73, 0x3b, 0x2f, 0x2f, 0xf1, 0x4a, 0x7b, 0x0c, 0xf3, 0x39, 0x41, 0x54, 0x07, 0xd8, 0xdb,
	0x7e, 0xf9, 0xf9, 0x56, 0xe7, 0x60, 0xeb, 0x8b, 0x83, 0xc5, 0xa9, 0xec, 0xfc, 0xac, 0xbd, 0xbb,
	0xbb, 0x28, 0xa1, 0x1a, 0x54, 0xb6, 0x5e, 0xb4, 0x9f, 0xef, 0x2e, 0x96, 0xb4, 0xb7, 0xb0, 0xc8,
	0x3c, 0xcc, 0x9e, 0x41, 0xbe, 0x1d, 0x90, 0x90, 0xa2, 0x75, 0xa1, 0xd6, 0x99, 0xfd, 0xdb, 0x53,
	0x42, 0xb5, 0xaf, 0x41, 0x35, 0xfa, 0xee, 0x38, 0x56, 0xdc, 0x08, 0xb6, 0xa7, 0x8c, 0x99, 0xe8,
	0xe2, 0x39, 0x6b, 0x12, 0x49, 0x71, 0x72, 0x3b, 0xd3, 0xf3, 0xd3, 0x25, 0x58, 0xe0, 0x62, 0xc4,
	0xa5, 0x4e, 0xd7, 0x21, 0x81, 0xf6, 0x67, 0x09, 0x96, 0x04, 0xf0, 0xd0, 0xf7, 0xdc, 0x90, 0xa0,
	0x1d, 0x00, 0x3a, 0xf4, 0x3a, 0x5d, 0xf6, 0x1c, 0x1e, 0xe0, 0x3b, 0x82, 0xb7, 0x26, 0x24, 0x32,
	0xaf, 0x3d, 0x77, 0xbb, 0xde, 0xf6, 0x94, 0x51, 0xa3, 0x69, 0x10, 0x3e, 0x86, 0xd9, 0x80, 0xb3,
	0xf1, 0x70, 0xdf, 0x14, 0xeb, 0xad, 0x30, 0xcb, 0xa2, 0xd7, 0x26, 0x42, 0xea, 0xf7, 0x92, 0xe0,
	0xdc, 0x48, 0x3f, 0xda, 0x01, 0x74, 0x22, 0xd4, 0x41, 0x2e, 0x11, 0xd7, 0x05, 0xe5, 0x13, 0xc5,
	0x62, 0x2c, 0x9d, 0x4c, 0xd4, 0x4f, 0x13, 0xaa, 0xbc, 0x25, 0x2b, 0xa5, 0x46, 0xf9, 0xb6, 0xdc,
	0xba, 0x56, 0x94, 0x17, 0x46, 0xc2, 0xf4, 0x74, 0x21, 0x2a, 0x80, 0xd8, 0xb4, 0x4e, 0x94, 0x1d,
	0xda, 0x4f, 0x12, 0xac, 0xee, 0x13, 0xd7, 0x12, 0xd1, 0x92, 0x38, 0x5e, 0xa9, 0xa5, 0x77, 0x61,
	0x26, 0x36, 0x82, 0xfb, 0xb1, 0xd8, 0x50, 0xce, 0xa3, 0xf5, 0x41, 0x99, 0xb4, 0x8a, 0x07, 0x58,
	0x81, 0x6a, 0x18, 0x3b, 0x9e, 0xd9, 0x32, 0x6b, 0x24, 0x47, 0xf4, 0x30, 0x9f, 0xea, 0x67, 0x01,
	0xe5, 0x0a, 0xe0, 0x57, 0x89, 0xf7, 0xa6, 0x91, 0x98, 0xc6, 0x57, 0xfa, 0xfc, 0x0b, 0x9a, 0x16,
	0x0d, 0x3f, 0xd3, 0xb3, 0x08, 0x2f, 0x07, 0xf6, 0xad, 0xed, 0x03, 0x12, 0xad, 0xe5, 0x6e, 0x79,
	0x22, 0xa4, 0xaa, 0x74, 0xce, 0x54, 0xcd, 0x12, 0x55, 0x7b, 0x57, 0x86, 0xe5, 0x57, 0xbe, 0x85,
	0x29, 0xd9, 0xe3, 0x25, 0x97, 0xf8, 0x61, 0xbc, 0xed, 0x49, 0xe7, 0x6f, 0x7b, 0x37, 0x61, 0xce,
	0xeb, 0x5b, 0x9d, 0xb4, 0xa8, 0xe3, 0xc9, 0x2f, 0x7b, 0x7d, 0x2b, 0x01, 0x89, 0x58, 0x5c, 0x32,
	0xec, 0x8c, 0xd5, 0xbd, 0xec, 0x92, 0x61, 0xca, 0xb2, 0x06, 0xb3, 0x11, 0x8b, 0xb0, 0x04, 0x54,
	0x5d, 0x32, 0xdc, 0x8f, 0xf6, 0x80, 0x37, 0x70, 0x5d, 0x94, 0x7e, 0xdf, 0x5d, 0x40, 0x11, 0x60,
	0xf2, 0xeb, 0xc0, 0xd8, 0x84, 0x9e, 0xb9, 0xd0, 0x84, 0xae, 0x5e, 0xc9, 0x84, 0x7e, 0x02, 0x2b,
	0xe3, 0x81, 0xe1, 0x21, 0x4f, 0xa6, 0x8a, 0x74, 0xd6, 0x54, 0xf9, 0xa3, 0x0c, 0xd7, 0x9e, 0x05,
	0x04, 0x53, 0xd2, 0x8e, 0x57, 0xc4, 0x24, 0xae, 0xea, 0x78, 0x9b, 0x16, 0x9a, 0xb4, 0xd8, 0x89,
	0x4b, 0xf9, 0x4e, 0x9c, 0xee, 0x63, 0xe5, 0xf3, 0xed, 0x63, 0xd3, 0x17, 0xdb, 0xc7, 0xf2, 0x4b,
	0x61, 0x65, 0x7c, 0x29, 0xfc, 0xcf, 0xf8, 0x9c, 0xb9, 0xcf, 0x55, 0x2f, 0xb7, 0xcf, 0x9d, 0x2b,
	0xf8, 0xb3, 0x57, 0x12, 0xfc, 0xd7, 0xb0, 0x3c, 0x16, 0xbc, 0xab, 0x29, 0x77, 0x03, 0x10, 0xdf,
	0x74, 0xda, 0x03, 0xda, 0x4b, 0x52, 0xe2, 0x52, 0xfb, 0x91, 0xb6, 0x07, 0xff, 0xcb, 0xe9, 0xe4,
	0x96, 0x5e, 0xbc, 0x7f, 0x68, 0xef, 0x24, 0xa8, 0x7f, 0x4a, 0xa8, 0xd8, 0x95, 0x2f, 0xd1, 0x8d,
	0xd6, 0xc7, 0xff, 0x07, 0x39, 0x6d, 0x2f, 0x29, 0xe7, 0xf7, 0x92, 0xa2, 0xdd, 0xe3, 0x21, 0x2c,
	0xa4, 0x86, 0xbd, 0x47, 0x35, 0xb6, 0xfe, 0xa9, 0x40, 0x9d, 0x87, 0x72, 0x9f, 0x04, 0x27, 0x8e,
	0x49, 0xd0, 0xd7, 0x50, 0x4b, 0x77, 0x12, 0x74, 0xbd, 0x78, 0x53, 0x61, 0x6f, 0x57, 0xd7, 0xcf,
	0x5a, 0x63, 0xb4, 0x95, 0xef, 0xfe, 0xfa, 0xfb, 0xc7, 0xd2, 0xa2, 0x26, 0xeb, 0x78, 0x40, 0x7b,
	0x7a, 0x3f, 0x62, 0x78, 0x2c, 0xdd, 0x41, 0x23, 0x58, 0x1c, 0x9f, 0xa5, 0x48, 0x5c, 0x1f, 0x4f,
	0x19, 0xff, 0xea, 0xad, 0x33, 0x79, 0x38, 0xe8, 0x3a, 0x03, 0x5d, 0xd1, 0x96, 0x62, 0x50, 0x36,
	0xf8, 0x46, 0x7a, 0x48, 0x5c, 0x2b, 0x82, 0x3e, 0x04, 0xc8, 0x26, 0x15, 0x9a, 0x18, 0x9a, 0xe2,
	0xb8, 0x55, 0x37, 0x4e, 0xa1, 0x72, 0xa0, 0x55, 0x06, 0xb4, 0xa4, 0xcd, 0x89, 0x40, 0x11, 0xc6,
	0x5b, 0xa8, 0xe7, 0xdb, 0x23, 0x6a, 0x88, 0xae, 0x2f, 0x1a, 0x69, 0xea, 0xcd, 0x33, 0x38, 0x38,
	0xde, 0x2d, 0x86, 0xb7, 0xa1, 0x29, 0xc9, 0x7f, 0xd6, 0xba, 0xd9, 0xc3, 0xae, 0x4d, 0x36, 0x93,
	0x76, 0x15, 0x61, 0xbb, 0x30, 0x9f, 0xab, 0x4e, 0x24, 0x96, 0x7b, 0x51, 0xd3, 0x55, 0x1b, 0xa7,
	0x33, 0x70, 0x60, 0x95, 0x01, 0x5f, 0xd3, 0x16, 0x32, 0x60, 0xc6, 0x17, 0xe1, 0x75, 0x41, 0x16,
	0x2a, 0x0c, 0x6d, 0x4c, 0xd6, 0xa5, 0x50, 0xcd, 0xea, 0xff, 0x4f, 0x23, 0x73, 0x24, 0x85, 0x21,
	0x21, 0x6d, 0x3e, 0x76, 0x29, 0xaf, 0xe5, 0x08, 0xe7, 0x25, 0x54, 0x79, 0x76, 0xa3, 0x35, 0x41,
	0x49, 0xbe, 0x14, 0x55, 0xb5, 0x88, 0xc4, 0x75, 0xcf, 0x33, 0xdd, 0x55, 0x54, 0xd1, 0xa3, 0xb4,
	0x7f, 0x7a, 0xfc, 0x43, 0xfb, 0x01, 0xaa, 0xb4, 0xca, 0x1f, 0x36, 0xef, 0xdd, 0x91, 0x4a, 0xc1,
	0x07, 0x50, 0xd9, 0x89, 0x44, 0x51, 0xa3, 0x47, 0xa9, 0x1f, 0x3e, 0xd6, 0x75, 0xdb, 0xa1, 0xbd,
	0xc1, 0x61, 0xd3, 0xf4, 0x8e, 0xf5, 0xbe, 0x83, 0x8f, 0x1f, 0xb5, 0xee, 0xeb, 0x8c, 0xe3, 0xcb,
	0xfb, 0xa7, 0x51, 0xf4, 0x90, 0x04, 0x27, 0x24, 0xd0, 0xfd, 0x23, 0x5b, 0x67, 0x3f, 0x41, 0xe8,
	0xe9, 0x0f, 0x1d, 0x87, 0x33, 0xec, 0xe2, 0xfe, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xbf,
	0x84, 0x13, 0x20, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	// Login the user. If the user has 2-factor authentication enabled,
	// a verification code must be sent with SendVerification to complete the
	// login process.
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	// Send a verification code to the user using the specified method.
	SendVerification(ctx context.Context, in *SendVerificationRequest, opts ...grpc.CallOption) (*SendVerificationResponse, error)
	// Complete logging in the user.
	VerifyUser(ctx context.Context, in *VerifyUserRequest, opts ...grpc.CallOption) (*VerifyUserResponse, error)
	// Change the user's password.
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error)
	// Create an account.
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	// Fetch a new access token.
	RefreshAuth(ctx context.Context, in *RefreshAuthRequest, opts ...grpc.CallOption) (*RefreshAuthResponse, error)
	// Get the information of the user with the given username or user id.
	// If the user is the logged in user, the private user information is
	// included.
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) SendVerification(ctx context.Context, in *SendVerificationRequest, opts ...grpc.CallOption) (*SendVerificationResponse, error) {
	out := new(SendVerificationResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/SendVerification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) VerifyUser(ctx context.Context, in *VerifyUserRequest, opts ...grpc.CallOption) (*VerifyUserResponse, error) {
	out := new(VerifyUserResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/VerifyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error) {
	out := new(UpdatePasswordResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) RefreshAuth(ctx context.Context, in *RefreshAuthRequest, opts ...grpc.CallOption) (*RefreshAuthResponse, error) {
	out := new(RefreshAuthResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/RefreshAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/kript.api.AccountService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	// Login the user. If the user has 2-factor authentication enabled,
	// a verification code must be sent with SendVerification to complete the
	// login process.
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	// Send a verification code to the user using the specified method.
	SendVerification(context.Context, *SendVerificationRequest) (*SendVerificationResponse, error)
	// Complete logging in the user.
	VerifyUser(context.Context, *VerifyUserRequest) (*VerifyUserResponse, error)
	// Change the user's password.
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*UpdatePasswordResponse, error)
	// Create an account.
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	// Fetch a new access token.
	RefreshAuth(context.Context, *RefreshAuthRequest) (*RefreshAuthResponse, error)
	// Get the information of the user with the given username or user id.
	// If the user is the logged in user, the private user information is
	// included.
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) LoginUser(ctx context.Context, req *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedAccountServiceServer) SendVerification(ctx context.Context, req *SendVerificationRequest) (*SendVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendVerification not implemented")
}
func (*UnimplementedAccountServiceServer) VerifyUser(ctx context.Context, req *VerifyUserRequest) (*VerifyUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyUser not implemented")
}
func (*UnimplementedAccountServiceServer) UpdatePassword(ctx context.Context, req *UpdatePasswordRequest) (*UpdatePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (*UnimplementedAccountServiceServer) CreateAccount(ctx context.Context, req *CreateAccountRequest) (*CreateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedAccountServiceServer) RefreshAuth(ctx context.Context, req *RefreshAuthRequest) (*RefreshAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshAuth not implemented")
}
func (*UnimplementedAccountServiceServer) GetUser(ctx context.Context, req *GetUserRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_SendVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).SendVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/SendVerification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).SendVerification(ctx, req.(*SendVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_VerifyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).VerifyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/VerifyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).VerifyUser(ctx, req.(*VerifyUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_RefreshAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).RefreshAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/RefreshAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).RefreshAuth(ctx, req.(*RefreshAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.AccountService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kript.api.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginUser",
			Handler:    _AccountService_LoginUser_Handler,
		},
		{
			MethodName: "SendVerification",
			Handler:    _AccountService_SendVerification_Handler,
		},
		{
			MethodName: "VerifyUser",
			Handler:    _AccountService_VerifyUser_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _AccountService_UpdatePassword_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "RefreshAuth",
			Handler:    _AccountService_RefreshAuth_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _AccountService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kript/api/account.proto",
}
