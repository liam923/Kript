// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kript/api/data.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// A permission that a user can have on a datum.
type Permission int32

const (
	Permission_UNKNOWN Permission = 0
	// Permission to read the datum.
	Permission_READ Permission = 1
	// Permission to read and write the datum.
	Permission_WRITE Permission = 2
	// Permission to read and delete the datum.
	Permission_DELETE Permission = 3
	// Permission to read and share the datum with other users. The user has the power
	// to share the same permissions that they have.
	Permission_SHARE Permission = 4
	// Full permission on the datum.
	Permission_ADMIN Permission = 5
)

var Permission_name = map[int32]string{
	0: "UNKNOWN",
	1: "READ",
	2: "WRITE",
	3: "DELETE",
	4: "SHARE",
	5: "ADMIN",
}

var Permission_value = map[string]int32{
	"UNKNOWN": 0,
	"READ":    1,
	"WRITE":   2,
	"DELETE":  3,
	"SHARE":   4,
	"ADMIN":   5,
}

func (x Permission) String() string {
	return proto.EnumName(Permission_name, int32(x))
}

func (Permission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0}
}

type Datum struct {
	// The identifier of this datum.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The owner of this datum.
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// The title of this datum, given by the user.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The actual data of this datum, such as a password or code, encrypted.
	Data *ESecret `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// The encryption algorithm used to encrypt the actual data.
	DataEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,5,opt,name=data_encryption_algorithm,json=dataEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"data_encryption_algorithm,omitempty"`
	// The initialization vector used to encrypt the data.
	DataIv []byte `protobuf:"bytes,6,opt,name=data_iv,json=dataIv,proto3" json:"data_iv,omitempty"`
	// A map of ids of users who have access to this datum to information on what
	// permissions they have. This does not include the owner, who has all permissions.
	Accessors map[string]*Datum_Access `protobuf:"bytes,7,rep,name=accessors,proto3" json:"accessors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The metadata associated with this datum.
	Metadata             *Datum_Metadata `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Datum) Reset()         { *m = Datum{} }
func (m *Datum) String() string { return proto.CompactTextString(m) }
func (*Datum) ProtoMessage()    {}
func (*Datum) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0}
}
func (m *Datum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum.Unmarshal(m, b)
}
func (m *Datum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum.Marshal(b, m, deterministic)
}
func (m *Datum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum.Merge(m, src)
}
func (m *Datum) XXX_Size() int {
	return xxx_messageInfo_Datum.Size(m)
}
func (m *Datum) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum.DiscardUnknown(m)
}

var xxx_messageInfo_Datum proto.InternalMessageInfo

func (m *Datum) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Datum) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Datum) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Datum) GetData() *ESecret {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Datum) GetDataEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.DataEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

func (m *Datum) GetDataIv() []byte {
	if m != nil {
		return m.DataIv
	}
	return nil
}

func (m *Datum) GetAccessors() map[string]*Datum_Access {
	if m != nil {
		return m.Accessors
	}
	return nil
}

func (m *Datum) GetMetadata() *Datum_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// An object representing relevant data to a user who has access to this
// datum.
type Datum_Access struct {
	// The id of the user whom this access object is associated with.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The key used to encrypt the actual data, encrypted using this user's
	// public key and decrypted with their private key.
	DataKey *EBytes `protobuf:"bytes,2,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	// The list of permissions this user has on this datum.
	Permissions          []Permission `protobuf:"varint,3,rep,packed,name=permissions,proto3,enum=kript.api.Permission" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Datum_Access) Reset()         { *m = Datum_Access{} }
func (m *Datum_Access) String() string { return proto.CompactTextString(m) }
func (*Datum_Access) ProtoMessage()    {}
func (*Datum_Access) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0, 1}
}
func (m *Datum_Access) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum_Access.Unmarshal(m, b)
}
func (m *Datum_Access) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum_Access.Marshal(b, m, deterministic)
}
func (m *Datum_Access) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum_Access.Merge(m, src)
}
func (m *Datum_Access) XXX_Size() int {
	return xxx_messageInfo_Datum_Access.Size(m)
}
func (m *Datum_Access) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum_Access.DiscardUnknown(m)
}

var xxx_messageInfo_Datum_Access proto.InternalMessageInfo

func (m *Datum_Access) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Datum_Access) GetDataKey() *EBytes {
	if m != nil {
		return m.DataKey
	}
	return nil
}

func (m *Datum_Access) GetPermissions() []Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// The metadata associated with this datum.
type Datum_Metadata struct {
	// The user who created and owns this datum.
	OwnerId string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// The time at which this datum was created.
	CreatedTime *types.Timestamp `protobuf:"bytes,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// The time at which this datum was last modified.
	LastEdited *types.Timestamp `protobuf:"bytes,3,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
	// A map of id of users with access or who once had access to metadata
	// associated with that access.
	AccessMetadata       map[string]*Datum_Metadata_AccessMetadata `protobuf:"bytes,4,rep,name=access_metadata,json=accessMetadata,proto3" json:"access_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Datum_Metadata) Reset()         { *m = Datum_Metadata{} }
func (m *Datum_Metadata) String() string { return proto.CompactTextString(m) }
func (*Datum_Metadata) ProtoMessage()    {}
func (*Datum_Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0, 2}
}
func (m *Datum_Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum_Metadata.Unmarshal(m, b)
}
func (m *Datum_Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum_Metadata.Marshal(b, m, deterministic)
}
func (m *Datum_Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum_Metadata.Merge(m, src)
}
func (m *Datum_Metadata) XXX_Size() int {
	return xxx_messageInfo_Datum_Metadata.Size(m)
}
func (m *Datum_Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Datum_Metadata proto.InternalMessageInfo

func (m *Datum_Metadata) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Datum_Metadata) GetCreatedTime() *types.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Datum_Metadata) GetLastEdited() *types.Timestamp {
	if m != nil {
		return m.LastEdited
	}
	return nil
}

func (m *Datum_Metadata) GetAccessMetadata() map[string]*Datum_Metadata_AccessMetadata {
	if m != nil {
		return m.AccessMetadata
	}
	return nil
}

// Metadata associated with a user who had access to this datum at some
// point.
type Datum_Metadata_AccessMetadata struct {
	// The grants and revokes that have been given to the user.
	GrantMetadata        []*Datum_Metadata_AccessMetadata_PermissionGrantMetadata `protobuf:"bytes,1,rep,name=grant_metadata,json=grantMetadata,proto3" json:"grant_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *Datum_Metadata_AccessMetadata) Reset()         { *m = Datum_Metadata_AccessMetadata{} }
func (m *Datum_Metadata_AccessMetadata) String() string { return proto.CompactTextString(m) }
func (*Datum_Metadata_AccessMetadata) ProtoMessage()    {}
func (*Datum_Metadata_AccessMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0, 2, 1}
}
func (m *Datum_Metadata_AccessMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata.Unmarshal(m, b)
}
func (m *Datum_Metadata_AccessMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata.Marshal(b, m, deterministic)
}
func (m *Datum_Metadata_AccessMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum_Metadata_AccessMetadata.Merge(m, src)
}
func (m *Datum_Metadata_AccessMetadata) XXX_Size() int {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata.Size(m)
}
func (m *Datum_Metadata_AccessMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum_Metadata_AccessMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_Datum_Metadata_AccessMetadata proto.InternalMessageInfo

func (m *Datum_Metadata_AccessMetadata) GetGrantMetadata() []*Datum_Metadata_AccessMetadata_PermissionGrantMetadata {
	if m != nil {
		return m.GrantMetadata
	}
	return nil
}

// Metadata associated with a change in access permissions.
type Datum_Metadata_AccessMetadata_PermissionGrantMetadata struct {
	// The id of the user who granted or revoked a permission.
	GranterId string `protobuf:"bytes,1,opt,name=granter_id,json=granterId,proto3" json:"granter_id,omitempty"`
	// The permission that was granted or revoked.
	Permission Permission `protobuf:"varint,2,opt,name=permission,proto3,enum=kript.api.Permission" json:"permission,omitempty"`
	// If true, this grant was a grant. Otherwise, it was a revoke.
	IsGrant              bool     `protobuf:"varint,3,opt,name=is_grant,json=isGrant,proto3" json:"is_grant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) Reset() {
	*m = Datum_Metadata_AccessMetadata_PermissionGrantMetadata{}
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) String() string {
	return proto.CompactTextString(m)
}
func (*Datum_Metadata_AccessMetadata_PermissionGrantMetadata) ProtoMessage() {}
func (*Datum_Metadata_AccessMetadata_PermissionGrantMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{0, 2, 1, 0}
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata.Unmarshal(m, b)
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata.Marshal(b, m, deterministic)
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata.Merge(m, src)
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) XXX_Size() int {
	return xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata.Size(m)
}
func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_Datum_Metadata_AccessMetadata_PermissionGrantMetadata proto.InternalMessageInfo

func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) GetGranterId() string {
	if m != nil {
		return m.GranterId
	}
	return ""
}

func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) GetPermission() Permission {
	if m != nil {
		return m.Permission
	}
	return Permission_UNKNOWN
}

func (m *Datum_Metadata_AccessMetadata_PermissionGrantMetadata) GetIsGrant() bool {
	if m != nil {
		return m.IsGrant
	}
	return false
}

type GetDataRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The list of ids of datums to retrieve. If empty, all datums that the user
	// has access to will be retrieved.
	DatumIds             []string `protobuf:"bytes,2,rep,name=datum_ids,json=datumIds,proto3" json:"datum_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDataRequest) Reset()         { *m = GetDataRequest{} }
func (m *GetDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetDataRequest) ProtoMessage()    {}
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{1}
}
func (m *GetDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataRequest.Unmarshal(m, b)
}
func (m *GetDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataRequest.Marshal(b, m, deterministic)
}
func (m *GetDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataRequest.Merge(m, src)
}
func (m *GetDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetDataRequest.Size(m)
}
func (m *GetDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataRequest proto.InternalMessageInfo

func (m *GetDataRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *GetDataRequest) GetDatumIds() []string {
	if m != nil {
		return m.DatumIds
	}
	return nil
}

type GetDataResponse struct {
	// The datums requested by the user.
	Datums               []*Datum `protobuf:"bytes,1,rep,name=datums,proto3" json:"datums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDataResponse) Reset()         { *m = GetDataResponse{} }
func (m *GetDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetDataResponse) ProtoMessage()    {}
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{2}
}
func (m *GetDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataResponse.Unmarshal(m, b)
}
func (m *GetDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataResponse.Marshal(b, m, deterministic)
}
func (m *GetDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataResponse.Merge(m, src)
}
func (m *GetDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetDataResponse.Size(m)
}
func (m *GetDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataResponse proto.InternalMessageInfo

func (m *GetDataResponse) GetDatums() []*Datum {
	if m != nil {
		return m.Datums
	}
	return nil
}

type UpdateDatumRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The id of the datum to update.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The new title of the datum. (Optional)
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The new actual data of the datum, such as a password or code, encrypted.
	// This should decrypt to a string of a json object.
	Data *ESecret `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// The new encryption algorithm used to encrypt the actual data.
	DataEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,5,opt,name=data_encryption_algorithm,json=dataEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"data_encryption_algorithm,omitempty"`
	// The new initialization vector used to encrypt the data.
	DataIv               []byte   `protobuf:"bytes,6,opt,name=data_iv,json=dataIv,proto3" json:"data_iv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDatumRequest) Reset()         { *m = UpdateDatumRequest{} }
func (m *UpdateDatumRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDatumRequest) ProtoMessage()    {}
func (*UpdateDatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{3}
}
func (m *UpdateDatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDatumRequest.Unmarshal(m, b)
}
func (m *UpdateDatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDatumRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDatumRequest.Merge(m, src)
}
func (m *UpdateDatumRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDatumRequest.Size(m)
}
func (m *UpdateDatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDatumRequest proto.InternalMessageInfo

func (m *UpdateDatumRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *UpdateDatumRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateDatumRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateDatumRequest) GetData() *ESecret {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateDatumRequest) GetDataEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.DataEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

func (m *UpdateDatumRequest) GetDataIv() []byte {
	if m != nil {
		return m.DataIv
	}
	return nil
}

type UpdateDatumResponse struct {
	// The updated datum.
	Datum                *Datum   `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDatumResponse) Reset()         { *m = UpdateDatumResponse{} }
func (m *UpdateDatumResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDatumResponse) ProtoMessage()    {}
func (*UpdateDatumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{4}
}
func (m *UpdateDatumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDatumResponse.Unmarshal(m, b)
}
func (m *UpdateDatumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDatumResponse.Marshal(b, m, deterministic)
}
func (m *UpdateDatumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDatumResponse.Merge(m, src)
}
func (m *UpdateDatumResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDatumResponse.Size(m)
}
func (m *UpdateDatumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDatumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDatumResponse proto.InternalMessageInfo

func (m *UpdateDatumResponse) GetDatum() *Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

type CreateDatumRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The title of the datum. (Optional)
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The actual data of the datum, such as a password or code, encrypted.
	// This should decrypt to a string of a json object.
	Data *ESecret `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// The key used to encrypt the actual data, encrypted using the owner's
	// public key and decrypted with their private key.
	DataKey *EBytes `protobuf:"bytes,5,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	// The encryption algorithm used to encrypt the actual data.
	DataEncryptionAlgorithm SEncryptionAlgorithm `protobuf:"varint,6,opt,name=data_encryption_algorithm,json=dataEncryptionAlgorithm,proto3,enum=kript.api.SEncryptionAlgorithm" json:"data_encryption_algorithm,omitempty"`
	// The initialization vector used to encrypt the data.
	DataIv               []byte   `protobuf:"bytes,7,opt,name=data_iv,json=dataIv,proto3" json:"data_iv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDatumRequest) Reset()         { *m = CreateDatumRequest{} }
func (m *CreateDatumRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDatumRequest) ProtoMessage()    {}
func (*CreateDatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{5}
}
func (m *CreateDatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatumRequest.Unmarshal(m, b)
}
func (m *CreateDatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatumRequest.Marshal(b, m, deterministic)
}
func (m *CreateDatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatumRequest.Merge(m, src)
}
func (m *CreateDatumRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDatumRequest.Size(m)
}
func (m *CreateDatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatumRequest proto.InternalMessageInfo

func (m *CreateDatumRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *CreateDatumRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateDatumRequest) GetData() *ESecret {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateDatumRequest) GetDataKey() *EBytes {
	if m != nil {
		return m.DataKey
	}
	return nil
}

func (m *CreateDatumRequest) GetDataEncryptionAlgorithm() SEncryptionAlgorithm {
	if m != nil {
		return m.DataEncryptionAlgorithm
	}
	return SEncryptionAlgorithm_UNKNOWN_S_ENCRYPTION_ALGORITHM
}

func (m *CreateDatumRequest) GetDataIv() []byte {
	if m != nil {
		return m.DataIv
	}
	return nil
}

type CreateDatumResponse struct {
	// The created datum.
	Datum                *Datum   `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDatumResponse) Reset()         { *m = CreateDatumResponse{} }
func (m *CreateDatumResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDatumResponse) ProtoMessage()    {}
func (*CreateDatumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{6}
}
func (m *CreateDatumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatumResponse.Unmarshal(m, b)
}
func (m *CreateDatumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatumResponse.Marshal(b, m, deterministic)
}
func (m *CreateDatumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatumResponse.Merge(m, src)
}
func (m *CreateDatumResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDatumResponse.Size(m)
}
func (m *CreateDatumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatumResponse proto.InternalMessageInfo

func (m *CreateDatumResponse) GetDatum() *Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

type DeleteDatumRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The id of the datum to delete.
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDatumRequest) Reset()         { *m = DeleteDatumRequest{} }
func (m *DeleteDatumRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDatumRequest) ProtoMessage()    {}
func (*DeleteDatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{7}
}
func (m *DeleteDatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDatumRequest.Unmarshal(m, b)
}
func (m *DeleteDatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDatumRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDatumRequest.Merge(m, src)
}
func (m *DeleteDatumRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDatumRequest.Size(m)
}
func (m *DeleteDatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDatumRequest proto.InternalMessageInfo

func (m *DeleteDatumRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *DeleteDatumRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDatumResponse struct {
	// The deleted datum, as it was before deletion.
	Datum                *Datum   `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDatumResponse) Reset()         { *m = DeleteDatumResponse{} }
func (m *DeleteDatumResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDatumResponse) ProtoMessage()    {}
func (*DeleteDatumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{8}
}
func (m *DeleteDatumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDatumResponse.Unmarshal(m, b)
}
func (m *DeleteDatumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDatumResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDatumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDatumResponse.Merge(m, src)
}
func (m *DeleteDatumResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDatumResponse.Size(m)
}
func (m *DeleteDatumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDatumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDatumResponse proto.InternalMessageInfo

func (m *DeleteDatumResponse) GetDatum() *Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

type ShareDatumRequest struct {
	// The access token to identify and authenticate the user.
	AccessToken *AccessToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The id of the datum to share.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the user the datum should be shared with.
	TargetId string `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// The key used to encrypt the actual data, encrypted using the target user's
	// public key and decrypted with their private key.
	DataKey *EBytes `protobuf:"bytes,4,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	// The permissions to be granted to this user. These are in addition to any
	// permissions the user already has.
	Permissions          []Permission `protobuf:"varint,5,rep,packed,name=permissions,proto3,enum=kript.api.Permission" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ShareDatumRequest) Reset()         { *m = ShareDatumRequest{} }
func (m *ShareDatumRequest) String() string { return proto.CompactTextString(m) }
func (*ShareDatumRequest) ProtoMessage()    {}
func (*ShareDatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{9}
}
func (m *ShareDatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareDatumRequest.Unmarshal(m, b)
}
func (m *ShareDatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareDatumRequest.Marshal(b, m, deterministic)
}
func (m *ShareDatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareDatumRequest.Merge(m, src)
}
func (m *ShareDatumRequest) XXX_Size() int {
	return xxx_messageInfo_ShareDatumRequest.Size(m)
}
func (m *ShareDatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareDatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShareDatumRequest proto.InternalMessageInfo

func (m *ShareDatumRequest) GetAccessToken() *AccessToken {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *ShareDatumRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShareDatumRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *ShareDatumRequest) GetDataKey() *EBytes {
	if m != nil {
		return m.DataKey
	}
	return nil
}

func (m *ShareDatumRequest) GetPermissions() []Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type ShareDatumResponse struct {
	// The shared datum.
	Datum                *Datum   `protobuf:"bytes,1,opt,name=datum,proto3" json:"datum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareDatumResponse) Reset()         { *m = ShareDatumResponse{} }
func (m *ShareDatumResponse) String() string { return proto.CompactTextString(m) }
func (*ShareDatumResponse) ProtoMessage()    {}
func (*ShareDatumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e2363775050acee, []int{10}
}
func (m *ShareDatumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareDatumResponse.Unmarshal(m, b)
}
func (m *ShareDatumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareDatumResponse.Marshal(b, m, deterministic)
}
func (m *ShareDatumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareDatumResponse.Merge(m, src)
}
func (m *ShareDatumResponse) XXX_Size() int {
	return xxx_messageInfo_ShareDatumResponse.Size(m)
}
func (m *ShareDatumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareDatumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShareDatumResponse proto.InternalMessageInfo

func (m *ShareDatumResponse) GetDatum() *Datum {
	if m != nil {
		return m.Datum
	}
	return nil
}

func init() {
	proto.RegisterEnum("kript.api.Permission", Permission_name, Permission_value)
	proto.RegisterType((*Datum)(nil), "kript.api.Datum")
	proto.RegisterMapType((map[string]*Datum_Access)(nil), "kript.api.Datum.AccessorsEntry")
	proto.RegisterType((*Datum_Access)(nil), "kript.api.Datum.Access")
	proto.RegisterType((*Datum_Metadata)(nil), "kript.api.Datum.Metadata")
	proto.RegisterMapType((map[string]*Datum_Metadata_AccessMetadata)(nil), "kript.api.Datum.Metadata.AccessMetadataEntry")
	proto.RegisterType((*Datum_Metadata_AccessMetadata)(nil), "kript.api.Datum.Metadata.AccessMetadata")
	proto.RegisterType((*Datum_Metadata_AccessMetadata_PermissionGrantMetadata)(nil), "kript.api.Datum.Metadata.AccessMetadata.PermissionGrantMetadata")
	proto.RegisterType((*GetDataRequest)(nil), "kript.api.GetDataRequest")
	proto.RegisterType((*GetDataResponse)(nil), "kript.api.GetDataResponse")
	proto.RegisterType((*UpdateDatumRequest)(nil), "kript.api.UpdateDatumRequest")
	proto.RegisterType((*UpdateDatumResponse)(nil), "kript.api.UpdateDatumResponse")
	proto.RegisterType((*CreateDatumRequest)(nil), "kript.api.CreateDatumRequest")
	proto.RegisterType((*CreateDatumResponse)(nil), "kript.api.CreateDatumResponse")
	proto.RegisterType((*DeleteDatumRequest)(nil), "kript.api.DeleteDatumRequest")
	proto.RegisterType((*DeleteDatumResponse)(nil), "kript.api.DeleteDatumResponse")
	proto.RegisterType((*ShareDatumRequest)(nil), "kript.api.ShareDatumRequest")
	proto.RegisterType((*ShareDatumResponse)(nil), "kript.api.ShareDatumResponse")
}

func init() { proto.RegisterFile("kript/api/data.proto", fileDescriptor_7e2363775050acee) }

var fileDescriptor_7e2363775050acee = []byte{
	// 1124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0x67, 0xd7, 0x5e, 0xff, 0x79, 0xdb, 0xba, 0xee, 0xb4, 0x34, 0xce, 0xb6, 0xa1, 0x96, 0x0f,
	0x95, 0x89, 0x1a, 0x2f, 0x38, 0x8a, 0xa0, 0x29, 0x41, 0xb8, 0xd8, 0x2a, 0x56, 0x68, 0x5a, 0x6d,
	0x12, 0x2a, 0x51, 0x09, 0x6b, 0xe2, 0x1d, 0x36, 0xab, 0xd8, 0xbb, 0xcb, 0xcc, 0xd8, 0x95, 0xaf,
	0x1c, 0x10, 0xe2, 0x48, 0x3f, 0x06, 0x27, 0x3e, 0x0b, 0x77, 0x0e, 0x88, 0x3b, 0x5f, 0x01, 0xcd,
	0xec, 0xd8, 0xde, 0x8d, 0xed, 0x92, 0xa8, 0xed, 0x81, 0x93, 0xfd, 0xde, 0xfb, 0xcd, 0x6f, 0xe6,
	0xfd, 0xde, 0x9b, 0xb7, 0xbb, 0x70, 0xf3, 0x8c, 0xfa, 0x11, 0xb7, 0x71, 0xe4, 0xdb, 0x2e, 0xe6,
	0xb8, 0x11, 0xd1, 0x90, 0x87, 0xa8, 0x28, 0xbd, 0x0d, 0x1c, 0xf9, 0xd6, 0xfa, 0x1c, 0x30, 0x0a,
	0xfc, 0x31, 0xa1, 0x0c, 0x0f, 0x62, 0x94, 0xb5, 0x36, 0x0f, 0x91, 0xa0, 0x4f, 0x27, 0x11, 0x57,
	0x81, 0x3b, 0x5e, 0x18, 0x7a, 0x03, 0x22, 0x23, 0x38, 0x08, 0x42, 0x8e, 0xb9, 0x1f, 0x06, 0x4c,
	0x45, 0xef, 0xaa, 0xa8, 0xb4, 0x4e, 0x46, 0xdf, 0xdb, 0xdc, 0x1f, 0x12, 0xc6, 0xf1, 0x30, 0x52,
	0x80, 0xfb, 0xf2, 0xa7, 0xbf, 0xe5, 0x91, 0x60, 0x8b, 0xbd, 0xc4, 0x9e, 0x47, 0xa8, 0x1d, 0x46,
	0x92, 0x62, 0x91, 0xae, 0xf6, 0x5b, 0x11, 0x8c, 0x36, 0xe6, 0xa3, 0x21, 0x2a, 0x81, 0xee, 0xbb,
	0x15, 0xad, 0xaa, 0xd5, 0x8b, 0x8e, 0xee, 0xbb, 0xe8, 0x26, 0x18, 0xe1, 0xcb, 0x80, 0xd0, 0x8a,
	0x2e, 0x5d, 0xb1, 0x21, 0xbc, 0xdc, 0xe7, 0x03, 0x52, 0xc9, 0xc4, 0x5e, 0x69, 0xa0, 0x7b, 0x90,
	0x15, 0xf9, 0x57, 0xb2, 0x55, 0xad, 0x6e, 0x36, 0x51, 0x63, 0x26, 0x40, 0xa3, 0x73, 0x48, 0xfa,
	0x94, 0x70, 0x47, 0xc6, 0xd1, 0x0b, 0x58, 0x17, 0xbf, 0x3d, 0x95, 0xb0, 0x1f, 0x06, 0x3d, 0x3c,
	0xf0, 0x42, 0xea, 0xf3, 0xd3, 0x61, 0xc5, 0xa8, 0x6a, 0xf5, 0x52, 0xf3, 0x6e, 0x62, 0xf1, 0x61,
	0x67, 0x86, 0x6b, 0x4d, 0x61, 0xce, 0x9a, 0x60, 0x58, 0x12, 0x40, 0x6b, 0x90, 0x97, 0xe4, 0xfe,
	0xb8, 0x92, 0xab, 0x6a, 0xf5, 0x2b, 0x4e, 0x4e, 0x98, 0xdd, 0x31, 0xda, 0x83, 0x22, 0xee, 0xf7,
	0x09, 0x63, 0x21, 0x65, 0x95, 0x7c, 0x35, 0x53, 0x37, 0x53, 0xbb, 0xc8, 0xf4, 0x1b, 0xad, 0x29,
	0xa2, 0x13, 0x70, 0x3a, 0x71, 0xe6, 0x2b, 0xd0, 0x0e, 0x14, 0x86, 0x84, 0x63, 0x99, 0x60, 0x41,
	0x26, 0xb8, 0xbe, 0xb0, 0xfa, 0x89, 0x02, 0x38, 0x33, 0xa8, 0x75, 0x0c, 0xa5, 0x34, 0x27, 0x2a,
	0x43, 0xe6, 0x8c, 0x4c, 0x94, 0xc4, 0xe2, 0x2f, 0xda, 0x02, 0x63, 0x8c, 0x07, 0x23, 0x22, 0x35,
	0x36, 0x9b, 0x6b, 0x2b, 0x4e, 0xe5, 0xc4, 0xa8, 0x5d, 0xfd, 0x53, 0xcd, 0xfa, 0x59, 0x83, 0x5c,
	0xec, 0x15, 0x09, 0x8f, 0x18, 0xa1, 0xbd, 0x59, 0xd9, 0x72, 0xc2, 0xec, 0xba, 0xe8, 0x3e, 0x14,
	0xa4, 0x12, 0x62, 0xb7, 0x98, 0xf9, 0x7a, 0xb2, 0x24, 0x8f, 0x26, 0x9c, 0x30, 0x47, 0x8a, 0xb5,
	0x4f, 0x26, 0xe8, 0x13, 0x30, 0x23, 0x42, 0x87, 0x3e, 0x63, 0xa2, 0x2f, 0x2a, 0x99, 0x6a, 0xa6,
	0x5e, 0x6a, 0xbe, 0x9f, 0x58, 0xf0, 0x6c, 0x16, 0x75, 0x92, 0x48, 0xeb, 0x9f, 0x2c, 0x14, 0xa6,
	0x89, 0xa3, 0x75, 0x28, 0xc8, 0x0e, 0x99, 0x9f, 0x26, 0x2f, 0xed, 0xae, 0x8b, 0xf6, 0xe0, 0x4a,
	0x9f, 0x12, 0xcc, 0x89, 0xdb, 0x13, 0xcd, 0xaa, 0x8e, 0x64, 0x35, 0xe2, 0x4e, 0x6e, 0x4c, 0x3b,
	0xb9, 0x71, 0x34, 0xed, 0x64, 0xc7, 0x54, 0x78, 0xe1, 0x41, 0x0f, 0xc1, 0x1c, 0x60, 0xc6, 0x7b,
	0xc4, 0xf5, 0x39, 0x71, 0x65, 0xe3, 0xbd, 0x7e, 0x35, 0x08, 0x78, 0x47, 0xa2, 0xd1, 0x37, 0x70,
	0x2d, 0xae, 0x64, 0x6f, 0x56, 0xc3, 0xac, 0xec, 0x80, 0xad, 0x95, 0x35, 0x54, 0xa2, 0x4f, 0xcd,
	0xb8, 0x1f, 0x4a, 0x38, 0xe5, 0xb4, 0xce, 0xe0, 0xc6, 0x12, 0xd8, 0x92, 0x12, 0x7f, 0x9e, 0x2e,
	0x71, 0xfd, 0xa2, 0xdb, 0x26, 0x6b, 0xfe, 0x93, 0x3e, 0xed, 0xa5, 0x99, 0xdc, 0x1e, 0x94, 0x3c,
	0x8a, 0x03, 0x3e, 0x4f, 0x4b, 0x93, 0x69, 0x7d, 0x71, 0x51, 0xfe, 0x44, 0x55, 0x1f, 0x0b, 0xa2,
	0xd9, 0xbe, 0x57, 0xbd, 0xa4, 0x69, 0xfd, 0xa2, 0xc1, 0xda, 0x0a, 0x28, 0xda, 0x00, 0x90, 0xe0,
	0x64, 0xd5, 0x8b, 0xca, 0xd3, 0x75, 0xd1, 0x0e, 0xc0, 0xbc, 0x5d, 0x64, 0xfe, 0x2b, 0xfb, 0x2a,
	0x01, 0x14, 0x9d, 0xe4, 0xb3, 0x9e, 0xa4, 0x91, 0xc5, 0x2e, 0x38, 0x79, 0x9f, 0xc9, 0x8d, 0x6b,
	0xa7, 0x50, 0x7a, 0x4c, 0x78, 0x5b, 0x1c, 0x93, 0xfc, 0x30, 0x22, 0x8c, 0xa3, 0x07, 0x70, 0x45,
	0xd5, 0x97, 0x87, 0x67, 0x24, 0x90, 0x87, 0x30, 0x9b, 0xb7, 0x12, 0xbb, 0xc4, 0x69, 0x1f, 0x89,
	0xa8, 0x63, 0xe2, 0xb9, 0x81, 0x6e, 0x43, 0xd1, 0x15, 0x0a, 0xf5, 0x7c, 0x97, 0x55, 0xf4, 0x6a,
	0xa6, 0x5e, 0x74, 0x0a, 0xd2, 0xd1, 0x75, 0x59, 0xed, 0x21, 0x5c, 0x9b, 0xed, 0xc4, 0xa2, 0x30,
	0x60, 0x04, 0xd5, 0x21, 0x27, 0xc3, 0x4c, 0x49, 0x5d, 0x3e, 0x2f, 0xb5, 0xa3, 0xe2, 0xb5, 0x57,
	0x3a, 0xa0, 0xe3, 0xc8, 0xc5, 0x9c, 0xc4, 0xfe, 0x37, 0x3f, 0x6b, 0x3c, 0x9c, 0xf5, 0xe4, 0x70,
	0xfe, 0xbf, 0x8d, 0xe1, 0xda, 0x1e, 0xdc, 0x48, 0x89, 0xa2, 0x64, 0xbd, 0x07, 0x86, 0x94, 0x4d,
	0xc9, 0xb1, 0xa8, 0x6a, 0x1c, 0xae, 0xfd, 0xae, 0x03, 0xfa, 0x52, 0x8e, 0x85, 0xb7, 0x25, 0xea,
	0x9b, 0x89, 0x98, 0x1c, 0xb2, 0xc6, 0x7f, 0x0e, 0xd9, 0xd7, 0x4a, 0x9e, 0x7b, 0x7b, 0x92, 0xe7,
	0xcf, 0x4b, 0x9e, 0x92, 0xec, 0x92, 0x92, 0xf7, 0x00, 0xb5, 0xc9, 0x80, 0xbc, 0xb3, 0x36, 0x16,
	0xe7, 0x4b, 0x6d, 0x70, 0xc9, 0xf3, 0xfd, 0xa5, 0xc1, 0xf5, 0xc3, 0x53, 0x4c, 0xdf, 0xd9, 0x35,
	0xbb, 0x0d, 0x45, 0x8e, 0xa9, 0x47, 0xb8, 0x98, 0x6f, 0x71, 0x97, 0x14, 0x62, 0xc7, 0xb9, 0xa7,
	0x6c, 0xf6, 0xb2, 0x4f, 0x59, 0xe3, 0xa2, 0x4f, 0xd9, 0xda, 0x67, 0x80, 0x92, 0x39, 0x5e, 0x4e,
	0xa2, 0xcd, 0x67, 0x00, 0x73, 0x62, 0x64, 0x42, 0xfe, 0xf8, 0x60, 0xff, 0xe0, 0xe9, 0xf3, 0x83,
	0xf2, 0x7b, 0xa8, 0x00, 0x59, 0xa7, 0xd3, 0x6a, 0x97, 0x35, 0x54, 0x04, 0xe3, 0xb9, 0xd3, 0x3d,
	0xea, 0x94, 0x75, 0x04, 0x90, 0x6b, 0x77, 0xbe, 0xee, 0x1c, 0x75, 0xca, 0x19, 0xe1, 0x3e, 0xfc,
	0xaa, 0xe5, 0x74, 0xca, 0x59, 0xf1, 0xb7, 0xd5, 0x7e, 0xd2, 0x3d, 0x28, 0x1b, 0xcd, 0x3f, 0x33,
	0x60, 0x8a, 0xb9, 0x78, 0x48, 0xe8, 0xd8, 0xef, 0x13, 0xf4, 0x14, 0xf2, 0x6a, 0x52, 0xa2, 0xe4,
	0x7b, 0x51, 0x7a, 0x4e, 0x5b, 0xd6, 0xb2, 0x50, 0x9c, 0x4b, 0xed, 0xea, 0x8f, 0x7f, 0xfc, 0xfd,
	0x4a, 0xcf, 0x23, 0x43, 0xbe, 0x44, 0xa3, 0xef, 0xc0, 0x4c, 0xcc, 0x09, 0xb4, 0x91, 0x58, 0xb9,
	0x38, 0x54, 0xad, 0x0f, 0x56, 0x85, 0x15, 0x79, 0x59, 0x92, 0x43, 0x33, 0x26, 0xdf, 0xd5, 0x36,
	0x05, 0x7f, 0xe2, 0x52, 0xa4, 0xf8, 0x17, 0xe7, 0x4b, 0x8a, 0x7f, 0xc9, 0x5d, 0x9a, 0xf2, 0xd7,
	0xe6, 0xfc, 0x2f, 0xc0, 0x4c, 0x34, 0x75, 0x8a, 0x7f, 0xf1, 0x36, 0xa5, 0xf8, 0x97, 0xdc, 0x85,
	0xa9, 0x38, 0x9b, 0x4a, 0x1c, 0x0c, 0x30, 0xef, 0x06, 0x74, 0x27, 0x39, 0x32, 0xce, 0x5f, 0x04,
	0x6b, 0x63, 0x45, 0x54, 0x31, 0xdf, 0x92, 0xcc, 0xe5, 0x9a, 0x29, 0x99, 0x6d, 0x26, 0x10, 0xbb,
	0xda, 0xe6, 0xa3, 0xe1, 0xaf, 0xad, 0x1d, 0x64, 0x34, 0x33, 0x1f, 0x37, 0x3e, 0xda, 0xd4, 0x74,
	0xfa, 0x21, 0x18, 0xfb, 0x82, 0x06, 0x55, 0x4f, 0x39, 0x8f, 0xd8, 0xae, 0x6d, 0x7b, 0x3e, 0x3f,
	0x1d, 0x9d, 0x34, 0xfa, 0xe1, 0xd0, 0x1e, 0xf8, 0x78, 0xf8, 0xa0, 0xb9, 0x6d, 0x4b, 0xc4, 0xb7,
	0xdb, 0xab, 0x22, 0x36, 0x23, 0x74, 0x4c, 0xa8, 0x1d, 0x9d, 0x79, 0xf1, 0x87, 0x8b, 0x3d, 0xfb,
	0xf8, 0x39, 0xc9, 0x49, 0xc7, 0xf6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xfd, 0xa6, 0x79,
	0x4c, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	// Get the list of all data for the logged in user, or a specific datum if
	// specified.
	GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*GetDataResponse, error)
	// Update the specified datum with new data.
	UpdateDatum(ctx context.Context, in *UpdateDatumRequest, opts ...grpc.CallOption) (*UpdateDatumResponse, error)
	// Create a new datum.
	CreateDatum(ctx context.Context, in *CreateDatumRequest, opts ...grpc.CallOption) (*CreateDatumResponse, error)
	// Delete the specified datum.
	DeleteDatum(ctx context.Context, in *DeleteDatumRequest, opts ...grpc.CallOption) (*DeleteDatumResponse, error)
	// Share a datum with another user by granting them new permission(s) on it.
	ShareDatum(ctx context.Context, in *ShareDatumRequest, opts ...grpc.CallOption) (*ShareDatumResponse, error)
}

type dataServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataServiceClient(cc *grpc.ClientConn) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*GetDataResponse, error) {
	out := new(GetDataResponse)
	err := c.cc.Invoke(ctx, "/kript.api.DataService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UpdateDatum(ctx context.Context, in *UpdateDatumRequest, opts ...grpc.CallOption) (*UpdateDatumResponse, error) {
	out := new(UpdateDatumResponse)
	err := c.cc.Invoke(ctx, "/kript.api.DataService/UpdateDatum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) CreateDatum(ctx context.Context, in *CreateDatumRequest, opts ...grpc.CallOption) (*CreateDatumResponse, error) {
	out := new(CreateDatumResponse)
	err := c.cc.Invoke(ctx, "/kript.api.DataService/CreateDatum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) DeleteDatum(ctx context.Context, in *DeleteDatumRequest, opts ...grpc.CallOption) (*DeleteDatumResponse, error) {
	out := new(DeleteDatumResponse)
	err := c.cc.Invoke(ctx, "/kript.api.DataService/DeleteDatum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ShareDatum(ctx context.Context, in *ShareDatumRequest, opts ...grpc.CallOption) (*ShareDatumResponse, error) {
	out := new(ShareDatumResponse)
	err := c.cc.Invoke(ctx, "/kript.api.DataService/ShareDatum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	// Get the list of all data for the logged in user, or a specific datum if
	// specified.
	GetData(context.Context, *GetDataRequest) (*GetDataResponse, error)
	// Update the specified datum with new data.
	UpdateDatum(context.Context, *UpdateDatumRequest) (*UpdateDatumResponse, error)
	// Create a new datum.
	CreateDatum(context.Context, *CreateDatumRequest) (*CreateDatumResponse, error)
	// Delete the specified datum.
	DeleteDatum(context.Context, *DeleteDatumRequest) (*DeleteDatumResponse, error)
	// Share a datum with another user by granting them new permission(s) on it.
	ShareDatum(context.Context, *ShareDatumRequest) (*ShareDatumResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) GetData(ctx context.Context, req *GetDataRequest) (*GetDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedDataServiceServer) UpdateDatum(ctx context.Context, req *UpdateDatumRequest) (*UpdateDatumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDatum not implemented")
}
func (*UnimplementedDataServiceServer) CreateDatum(ctx context.Context, req *CreateDatumRequest) (*CreateDatumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatum not implemented")
}
func (*UnimplementedDataServiceServer) DeleteDatum(ctx context.Context, req *DeleteDatumRequest) (*DeleteDatumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDatum not implemented")
}
func (*UnimplementedDataServiceServer) ShareDatum(ctx context.Context, req *ShareDatumRequest) (*ShareDatumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareDatum not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.DataService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetData(ctx, req.(*GetDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UpdateDatum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UpdateDatum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.DataService/UpdateDatum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UpdateDatum(ctx, req.(*UpdateDatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_CreateDatum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).CreateDatum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.DataService/CreateDatum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).CreateDatum(ctx, req.(*CreateDatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_DeleteDatum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).DeleteDatum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.DataService/DeleteDatum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).DeleteDatum(ctx, req.(*DeleteDatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ShareDatum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareDatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ShareDatum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kript.api.DataService/ShareDatum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ShareDatum(ctx, req.(*ShareDatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kript.api.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _DataService_GetData_Handler,
		},
		{
			MethodName: "UpdateDatum",
			Handler:    _DataService_UpdateDatum_Handler,
		},
		{
			MethodName: "CreateDatum",
			Handler:    _DataService_CreateDatum_Handler,
		},
		{
			MethodName: "DeleteDatum",
			Handler:    _DataService_DeleteDatum_Handler,
		},
		{
			MethodName: "ShareDatum",
			Handler:    _DataService_ShareDatum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kript/api/data.proto",
}
